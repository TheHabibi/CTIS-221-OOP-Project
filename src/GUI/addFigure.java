/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Inheritance.Figure;
import SystemAndMain.CollectiblesSys;
import java.awt.Color;
import javax.swing.JPanel;

/**
 *
 * @author yusuf and ali eren
 */
public class addFigure extends javax.swing.JFrame {

    /**
     * Creates new form addFigure
     */
    public addFigure() {
        initComponents();
    }

    public void enterColor(JPanel temp) {
        temp.setBackground(new Color(202, 80, 16));
    }

    public void exitColor(JPanel temp) {
        temp.setBackground(new Color(60, 63, 66));
    }

    public void pressColor(JPanel temp) {
        temp.setBackground(new Color(255, 128, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        textTitle = new javax.swing.JTextField();
        labelPrice = new javax.swing.JLabel();
        textPrice = new javax.swing.JTextField();
        labelPublisher = new javax.swing.JLabel();
        textPublisher = new javax.swing.JTextField();
        labelCondition = new javax.swing.JLabel();
        comboCondition = new javax.swing.JComboBox<>();
        labelYear = new javax.swing.JLabel();
        textYear = new javax.swing.JTextField();
        labelSeries = new javax.swing.JLabel();
        textSeries = new javax.swing.JTextField();
        labelSize = new javax.swing.JLabel();
        textSize = new javax.swing.JTextField();
        labelLimit = new javax.swing.JLabel();
        textLimit = new javax.swing.JTextField();
        addButton = new javax.swing.JPanel();
        labelAdd = new javax.swing.JLabel();
        textInfo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        background.setBackground(new java.awt.Color(37, 36, 35));

        labelTitle.setBackground(new java.awt.Color(255, 255, 255));
        labelTitle.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle.setText("Title:");

        textTitle.setBackground(new java.awt.Color(60, 63, 66));
        textTitle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textTitle.setForeground(new java.awt.Color(255, 255, 255));
        textTitle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textTitle.setCaretColor(new java.awt.Color(202, 80, 16));
        textTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textTitleActionPerformed(evt);
            }
        });

        labelPrice.setBackground(new java.awt.Color(255, 255, 255));
        labelPrice.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelPrice.setForeground(new java.awt.Color(255, 255, 255));
        labelPrice.setText("Price:");

        textPrice.setBackground(new java.awt.Color(60, 63, 66));
        textPrice.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textPrice.setForeground(new java.awt.Color(255, 255, 255));
        textPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textPrice.setCaretColor(new java.awt.Color(202, 80, 16));
        textPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPriceActionPerformed(evt);
            }
        });

        labelPublisher.setBackground(new java.awt.Color(255, 255, 255));
        labelPublisher.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelPublisher.setForeground(new java.awt.Color(255, 255, 255));
        labelPublisher.setText("Publisher:");

        textPublisher.setBackground(new java.awt.Color(60, 63, 66));
        textPublisher.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textPublisher.setForeground(new java.awt.Color(255, 255, 255));
        textPublisher.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textPublisher.setCaretColor(new java.awt.Color(202, 80, 16));
        textPublisher.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textPublisher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPublisherActionPerformed(evt);
            }
        });

        labelCondition.setBackground(new java.awt.Color(255, 255, 255));
        labelCondition.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelCondition.setForeground(new java.awt.Color(255, 255, 255));
        labelCondition.setText("Condition:");

        comboCondition.setBackground(new java.awt.Color(255, 102, 51));
        comboCondition.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        comboCondition.setForeground(new java.awt.Color(0, 0, 0));
        comboCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Near Mint", "Fine", "Good", "Fair", "Poor" }));

        labelYear.setBackground(new java.awt.Color(255, 255, 255));
        labelYear.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelYear.setForeground(new java.awt.Color(255, 255, 255));
        labelYear.setText("Year:");

        textYear.setBackground(new java.awt.Color(60, 63, 66));
        textYear.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textYear.setForeground(new java.awt.Color(255, 255, 255));
        textYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textYear.setCaretColor(new java.awt.Color(202, 80, 16));
        textYear.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textYearActionPerformed(evt);
            }
        });

        labelSeries.setBackground(new java.awt.Color(255, 255, 255));
        labelSeries.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelSeries.setForeground(new java.awt.Color(255, 255, 255));
        labelSeries.setText("Series:");

        textSeries.setBackground(new java.awt.Color(60, 63, 66));
        textSeries.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textSeries.setForeground(new java.awt.Color(255, 255, 255));
        textSeries.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textSeries.setCaretColor(new java.awt.Color(202, 80, 16));
        textSeries.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSeriesActionPerformed(evt);
            }
        });

        labelSize.setBackground(new java.awt.Color(255, 255, 255));
        labelSize.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelSize.setForeground(new java.awt.Color(255, 255, 255));
        labelSize.setText("Size:");

        textSize.setBackground(new java.awt.Color(60, 63, 66));
        textSize.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textSize.setForeground(new java.awt.Color(255, 255, 255));
        textSize.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textSize.setCaretColor(new java.awt.Color(202, 80, 16));
        textSize.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSizeActionPerformed(evt);
            }
        });

        labelLimit.setBackground(new java.awt.Color(255, 255, 255));
        labelLimit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        labelLimit.setForeground(new java.awt.Color(255, 255, 255));
        labelLimit.setText("Limit:");

        textLimit.setBackground(new java.awt.Color(60, 63, 66));
        textLimit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        textLimit.setForeground(new java.awt.Color(255, 255, 255));
        textLimit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(60, 63, 66), 2));
        textLimit.setCaretColor(new java.awt.Color(202, 80, 16));
        textLimit.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textLimit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textLimitActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(60, 63, 66));
        addButton.setForeground(new java.awt.Color(60, 63, 66));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                addButtonMouseReleased(evt);
            }
        });

        labelAdd.setBackground(new java.awt.Color(153, 255, 51));
        labelAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_add_to_collection_96px.png"))); // NOI18N

        javax.swing.GroupLayout addButtonLayout = new javax.swing.GroupLayout(addButton);
        addButton.setLayout(addButtonLayout);
        addButtonLayout.setHorizontalGroup(
            addButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addButtonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelAdd)
                .addGap(20, 20, 20))
        );
        addButtonLayout.setVerticalGroup(
            addButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addButtonLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelAdd)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        textInfo.setBackground(new java.awt.Color(255, 255, 255));
        textInfo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        textInfo.setForeground(new java.awt.Color(255, 255, 255));
        textInfo.setText(" ");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(226, 226, 226)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(labelYear, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(labelSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(labelSize, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(textSize, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(labelLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(textLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(414, 414, 414)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(textInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTitle)
                    .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelYear)
                        .addComponent(textYear, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPrice)
                    .addComponent(labelSeries)
                    .addComponent(textSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPublisher)
                    .addComponent(textPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSize)
                    .addComponent(textSize, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCondition)
                    .addComponent(comboCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelLimit)
                    .addComponent(textLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                        .addComponent(textInfo)
                        .addGap(111, 111, 111))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textTitleActionPerformed

    private void textPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPriceActionPerformed

    private void textPublisherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPublisherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textPublisherActionPerformed

    private void textYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textYearActionPerformed

    private void textSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSeriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSeriesActionPerformed

    private void textSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textSizeActionPerformed

    private void textLimitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textLimitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textLimitActionPerformed

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:

        if (textTitle.getText().isEmpty() || textPrice.getText().isEmpty() || textPublisher.getText().isEmpty() || textSeries.getText().isEmpty() || textSize.getText().isEmpty() || textLimit.getText().isEmpty()) {
            textInfo.setText("Please fill the necessary fields!");
        } else {
            String title = textTitle.getText();
            double price = Double.parseDouble(textPrice.getText());
            String publisher = textPublisher.getText();
            String condition = comboCondition.getSelectedItem().toString();
            int year = Integer.parseInt(textYear.getText());

            String series = textSeries.getText();
            String size = textSize.getText();
            int limit = Integer.parseInt(textLimit.getText());

            Figure fg = new Figure(series, size, limit, title, price, publisher, condition, year, price);
            fg.setWorth(fg.worthCalculator());

            CollectiblesSys.addCollectible(fg);

            textInfo.setText("Your Figure is added to your collection!");
        }
    }//GEN-LAST:event_addButtonMouseClicked

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        // TODO add your handling code here:
        enterColor(addButton);
    }//GEN-LAST:event_addButtonMouseEntered

    private void addButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseExited
        // TODO add your handling code here:
        exitColor(addButton);
    }//GEN-LAST:event_addButtonMouseExited

    private void addButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMousePressed
        // TODO add your handling code here:
        pressColor(addButton);
    }//GEN-LAST:event_addButtonMousePressed

    private void addButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseReleased
        // TODO add your handling code here:
        enterColor(addButton);
    }//GEN-LAST:event_addButtonMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addFigure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addFigure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addFigure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addFigure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addFigure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addButton;
    private javax.swing.JPanel background;
    private javax.swing.JComboBox<String> comboCondition;
    private javax.swing.JLabel labelAdd;
    private javax.swing.JLabel labelCondition;
    private javax.swing.JLabel labelLimit;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelPublisher;
    private javax.swing.JLabel labelSeries;
    private javax.swing.JLabel labelSize;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelYear;
    private javax.swing.JLabel textInfo;
    private javax.swing.JTextField textLimit;
    private javax.swing.JTextField textPrice;
    private javax.swing.JTextField textPublisher;
    private javax.swing.JTextField textSeries;
    private javax.swing.JTextField textSize;
    private javax.swing.JTextField textTitle;
    private javax.swing.JTextField textYear;
    // End of variables declaration//GEN-END:variables
}
